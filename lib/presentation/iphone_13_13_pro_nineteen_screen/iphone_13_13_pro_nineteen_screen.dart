import 'bloc/iphone_13_13_pro_nineteen_bloc.dart';import 'models/iphone_13_13_pro_nineteen_model.dart';import 'package:farmmart/core/app_export.dart';import 'package:farmmart/core/utils/validation_functions.dart';import 'package:farmmart/presentation/homepage_page/homepage_page.dart';import 'package:farmmart/presentation/order_details_page/order_details_page.dart';import 'package:farmmart/presentation/rice_page/rice_page.dart';import 'package:farmmart/widgets/custom_bottom_bar.dart';import 'package:farmmart/widgets/custom_switch.dart';import 'package:farmmart/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class Iphone1313ProNineteenScreen extends StatelessWidget {Iphone1313ProNineteenScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

static Widget builder(BuildContext context) { return BlocProvider<Iphone1313ProNineteenBloc>(create: (context) => Iphone1313ProNineteenBloc(Iphone1313ProNineteenState(iphone1313ProNineteenModelObj: Iphone1313ProNineteenModel()))..add(Iphone1313ProNineteenInitialEvent()), child: Iphone1313ProNineteenScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(backgroundColor: theme.colorScheme.onPrimary.withOpacity(1), resizeToAvoidBottomInset: false, body: Form(key: _formKey, child: SizedBox(height: getVerticalSize(792), width: double.maxFinite, child: Stack(alignment: Alignment.bottomCenter, children: [Align(alignment: Alignment.center, child: Padding(padding: getPadding(left: 15, right: 20), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Container(height: getVerticalSize(69), width: getHorizontalSize(67), decoration: BoxDecoration(color: theme.colorScheme.onPrimary.withOpacity(1), borderRadius: BorderRadius.circular(getHorizontalSize(34)), border: Border.all(color: appTheme.lime900, width: getHorizontalSize(14)))), Padding(padding: getPadding(top: 14), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgArrowleft, height: getSize(24), width: getSize(24), margin: getMargin(bottom: 33), onTap: () {onTapImgArrowleft(context);}), Padding(padding: getPadding(top: 23), child: Text("lbl_settings".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.displaySmall)), CustomImageView(svgPath: ImageConstant.imgBaselinesearch24px, height: getSize(24), width: getSize(24), margin: getMargin(bottom: 33))])), Padding(padding: getPadding(left: 7, top: 53), child: Text("msg_personal_information".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleMedium)), BlocSelector<Iphone1313ProNineteenBloc, Iphone1313ProNineteenState, TextEditingController?>(selector: (state) => state.fullnameController, builder: (context, fullnameController) {return CustomTextFormField(controller: fullnameController, margin: getMargin(left: 7, top: 21, right: 5), contentPadding: getPadding(left: 20, top: 25, right: 20, bottom: 25), textStyle: CustomTextStyles.titleSmallGray500, hintText: "lbl_full_name3".tr, hintStyle: CustomTextStyles.titleSmallGray500, textInputAction: TextInputAction.next, validator: (value) {if (!isText(value)) {return "Please enter valid text";} return null;}, filled: true, fillColor: theme.colorScheme.onPrimary.withOpacity(1));}), Container(width: getHorizontalSize(343), margin: getMargin(left: 7, top: 24, right: 5), padding: getPadding(left: 20, top: 13, right: 20, bottom: 13), decoration: AppDecoration.outline8.copyWith(borderRadius: BorderRadiusStyle.roundedBorder4), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.center, children: [Text("lbl_date_of_birth".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.bodySmallGray500), Padding(padding: getPadding(top: 7, bottom: 4), child: Text("lbl_12_12_1989".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.bodyMediumMetropolisGray900))])), Padding(padding: getPadding(left: 7, top: 54, right: 6), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text("lbl_password3".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleMedium), Padding(padding: getPadding(top: 2), child: Text("lbl_change".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleSmallGray500))])), BlocSelector<Iphone1313ProNineteenBloc, Iphone1313ProNineteenState, TextEditingController?>(selector: (state) => state.hiddenatmnoController, builder: (context, hiddenatmnoController) {return CustomTextFormField(controller: hiddenatmnoController, margin: getMargin(left: 7, top: 20, right: 5), contentPadding: getPadding(all: 20), textStyle: CustomTextStyles.bodyMediumMetropolisGray900, hintText: "msg4".tr, hintStyle: CustomTextStyles.bodyMediumMetropolisGray900, textInputType: TextInputType.visiblePassword, validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "Please enter valid password";} return null;}, obscureText: true, filled: true, fillColor: theme.colorScheme.onPrimary.withOpacity(1));}), Padding(padding: getPadding(left: 7, top: 54), child: Text("lbl_notifications".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleMedium)), Padding(padding: getPadding(left: 7, top: 23, right: 6), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: getPadding(top: 2, bottom: 3), child: Text("lbl_sales".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleSmall)), BlocSelector<Iphone1313ProNineteenBloc, Iphone1313ProNineteenState, bool?>(selector: (state) => state.isSelectedSwitch, builder: (context, isSelectedSwitch) {return CustomSwitch(value: isSelectedSwitch, onChange: (value) {context.read<Iphone1313ProNineteenBloc>().add(ChangeSwitchEvent(value: value));});})])), Padding(padding: getPadding(left: 7, top: 24, right: 5), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: getPadding(top: 2, bottom: 3), child: Text("lbl_new_arrivals".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleSmall)), BlocSelector<Iphone1313ProNineteenBloc, Iphone1313ProNineteenState, bool?>(selector: (state) => state.isSelectedSwitch1, builder: (context, isSelectedSwitch1) {return CustomSwitch(value: isSelectedSwitch1, onChange: (value) {context.read<Iphone1313ProNineteenBloc>().add(ChangeSwitch1Event(value: value));});})])), Padding(padding: getPadding(left: 7, top: 24, right: 5), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 3, bottom: 2), child: Text("msg_delivery_status".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleSmall)), BlocSelector<Iphone1313ProNineteenBloc, Iphone1313ProNineteenState, bool?>(selector: (state) => state.isSelectedSwitch2, builder: (context, isSelectedSwitch2) {return CustomSwitch(value: isSelectedSwitch2, onChange: (value) {context.read<Iphone1313ProNineteenBloc>().add(ChangeSwitch2Event(value: value));});})]))]))), CustomImageView(imagePath: ImageConstant.imgRectangle30, height: getVerticalSize(839), width: getHorizontalSize(390), alignment: Alignment.bottomCenter)]))), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}))); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.homepagePage; case BottomBarEnum.Shop: return AppRoutes.ricePage; case BottomBarEnum.Favorites: return "/"; case BottomBarEnum.Profile: return AppRoutes.orderDetailsPage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.homepagePage: return HomepagePage.builder(context); case AppRoutes.ricePage: return RicePage.builder(context); case AppRoutes.orderDetailsPage: return OrderDetailsPage.builder(context); default: return DefaultWidget();} } 


/// Navigates to the previous screen.
///
/// This function takes a [BuildContext] object as a parameter, which is
/// used to build the navigation stack. When the action is triggered, this
/// function uses the [NavigatorService] to navigate to the previous screen
/// in the navigation stack.
onTapImgArrowleft(BuildContext context) { NavigatorService.goBack(); } 
 }
